{"signature": "fb9f2ff1a5cf9a9c036da94ba04549c54b6d8d3936f87e4b47c9e8e62d735b17", "data": "", "method": "fallback_base64", "note": "Fichier encod\u00e9 en mode fallback - sera re-chiffr\u00e9 lors de l'installation de pycryptodome"}