{"signature": "338590e5dc6482b416794db9bb7a4c974694de58ceb6c43dc3903dca8ffebd2f", "data": "", "method": "fallback_base64", "note": "Fichier encod\u00e9 en mode fallback - sera re-chiffr\u00e9 lors de l'installation de pycryptodome"}